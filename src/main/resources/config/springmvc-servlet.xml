<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
         http://www.springframework.org/schema/context
         http://www.springframework.org/schema/context/spring-context.xsd
         http://www.springframework.org/schema/mvc
         http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
         http://www.springframework.org/schema/cache/spring-cache.xsd">

    <!--mvc:annotation-drive 会自动注册DefaultAnnotationHandlerMapping与AnnotationMethodHandlerAdapter 两个bean,是spring MVC为@Controllers分发请求所必须的-->
    <mvc:annotation-driven />

    <!--处理已经注册过的bean的注解,-->
    <context:annotation-config/>

    <!-- 自动扫描控制器注解，并注册为bean, use-default-filters默认为true时会扫描包下所有注解
        有了component-scan可以移除<context:annatation-config/>
        可以配置多个 context:component-sacn
    -->
    <context:component-scan base-package="res.sogou.com.controler" use-default-filters="true" >
       <context:include-filter type="annotation"  expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>
    <!-- 静态资源处理-->
    <mvc:default-servlet-handler/>
    <mvc:interceptors>
        <mvc:interceptor>
            <mvc:mapping path="/*"/>
            <bean class="res.sogou.com.interceptor.LoginInterceptor">
                <property name="name">
                    <value>www.sogou.com</value>
                </property>
            </bean>
        </mvc:interceptor>
    </mvc:interceptors>
    <mvc:resources mapping="img" location="classpath:images" cache-period="123223"/>
    <!--<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/views/"/>
        <property name="suffix" value=".jsp"/>
    </bean>
    -->
    <!--  异常处理方式1-->
    <bean id="handlerExceptionResolver"
          class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
        <property name="defaultErrorView" value="errors/error"/>
        <property name="exceptionMappings">
            <props>
                <prop key="res.sogou.com.exception.AuthorizationException">/errors/authorError</prop>
            </props>
        </property>
        <property name="statusCodes">
            <props>
                <prop key="/errors/error">500</prop>
                <prop key="/errors/error">404</prop>
            </props>
        </property>
    </bean>

    <!-- 异常处理方式2-->
    <bean id="exceptionHandler" class="res.sogou.com.exception.MyExceptionHandler">
    </bean>

    <!-- 对模型视图名称的解析，即在模型视图名称添加前后缀 p:prefix中模板放置路径 -->
    <bean id="velocityConfig"
          class="org.springframework.web.servlet.view.velocity.VelocityConfigurer">
        <property name="resourceLoaderPath" value="/WEB-INF/views/" />
        <property name="velocityProperties">
            <props>
                <prop  key="input.encoding">UTF-8</prop>
                <prop  key="output.encoding">UTF-8</prop>
            </props>
        </property>
    </bean>
    <bean id="viewResolver"
          class="org.springframework.web.servlet.view.velocity.VelocityViewResolver">
        <property name="cache" value="true" />
        <property name="prefix" value="" />
      <!--  <property name="layoutUrl" value="layouet.vm" /> -->
        <property name="suffix" value=".vm" />
        <property name="contentType"><value>text/html;charset=UTF-8</value></property>
    </bean>

    <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter"
          p:ignoreDefaultModelOnRedirect="true" >
        <property name="messageConverters">
            <list>
                <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"/>
            </list>
        </property>
    </bean>



</beans>